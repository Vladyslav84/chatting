{"version":3,"sources":["components/message/message.js","components/send/send.js","components/chat/socket.js","components/chat/chat.js","App.js","index.js"],"names":["Message","item","currentUser","classMessage","user","className","text","Send","value","onChange","onSend","onSubmit","type","socket","io","Chat","useState","setCurrentUser","messages","setMessages","message","setMessage","isLogin","setIsLogin","users","setUsers","useEffect","on","data","user2","text2","length","shift","event","target","placeholder","id","onClick","trim","emit","e","preventDefault","map","key","Object","values","i","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAaeA,EAXC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACjBC,EAAeF,EAAKG,OAASF,EAAc,sBAAwB,mBACzE,OACE,qBAAKG,UAAU,oBAAf,SACE,uBAAMA,UAAWF,EAAjB,UACGF,EAAKG,KADR,KACgBH,EAAKK,WCIZC,EAXF,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC/B,OACE,uBAAML,UAAU,mBAAmBM,SAAUD,EAA7C,UACE,uBAAOL,UAAU,eAAeG,MAAOA,EAAOC,SAAUA,IACxD,wBAAQJ,UAAU,kBAAkBO,KAAK,SAAzC,wE,gBCDOC,EAASC,YAFV,kBCoGGC,MA/Ff,WAEE,MAAsCC,mBAAS,IAA/C,mBAAOd,EAAP,KAAoBe,EAApB,KACA,EAAgCD,mBAAS,IAAzC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAA8BH,mBAAS,IAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAA8BL,oBAAS,GAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAA0BP,mBAAS,IAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KAwCA,OAtCEC,qBAAU,WACRb,EAAOc,GAAG,WAAW,SAACC,GAOpB,MANoB,sBAAQV,GAAR,CAAkB,CAAEd,KAAMwB,EAAKC,MAAOvB,KAAMsB,EAAKE,SAEhDC,OAAS,IAC1Bb,EAASc,QAGNb,EAAY,GAAD,mBAAKD,GAAL,CAAe,CAAEd,KAAMwB,EAAKC,MAAOvB,KAAMsB,EAAKE,aAGpEjB,EAAOc,GAAG,SAAS,SAACC,GAAD,OAAUH,EAASG,QACnC,CAACV,IA2BJ,sCACFI,GAAW,uBAAMjB,UAAU,cAAhB,UACX,oBAAIA,UAAU,qBAAd,wCACA,qBAAKA,UAAU,qBAAf,SACE,gCACA,uBACEA,UAAU,eACRG,MAAON,EACTO,SAjCe,SAACwB,GAClBhB,EAAegB,EAAMC,OAAO1B,QAiC1B2B,YAAY,qBACZC,GAAG,sBAGL,wBACA/B,UAAU,+BACVgC,QAhCgB,WACZnC,EAAYoC,OAAOP,OAAS,IAC9BlB,EAAO0B,KAAK,cAAerC,GAC3BqB,GAAW,KA2Bb,sBAOGD,GACG,qBAAKjB,UAAU,YAAf,SACJ,sBAAKA,UAAU,wBAAf,UACI,sBAAKA,UAAU,wBAAf,UACA,cAAC,EAAD,CACMG,MAAOY,EACPX,SA/CS,SAACwB,GACtBZ,EAAWY,EAAMC,OAAO1B,QA+CZE,OArCM,SAAC8B,GACnBA,EAAEC,iBACIrB,EAAQkB,OAAOP,OAAS,IAC5BlB,EAAO0B,KAAK,UAAW,CAAEV,MAAO3B,EAAa4B,MAAOV,EAAQkB,SAC5DjB,EAAW,QAmCP,qBAAKhB,UAAU,WAAf,SACOa,EAASwB,KAAI,SAACzC,EAAM0C,GAAP,OACZ,cAAC,EAAD,CAAS1C,KAAMA,EAAMC,YAAaA,GAAkByC,WAI5D,oBAAItC,UAAU,sBAAd,SACGuC,OAAOC,OAAOrB,GAAOkB,KAAI,SAACtC,EAAM0C,GAAP,OACtB,oBAAIzC,UAAU,kBAAd,SACGD,GADkC0C,iBC7EtCC,MAVf,WACE,OACE,qBAAK1C,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCFR2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.56144cbb.chunk.js","sourcesContent":["import './message.css'\r\n\r\nconst Message = ({ item, currentUser }) => {\r\n  const classMessage = item.user === currentUser ? 'alert alert-primary' : 'alert alert-dark'\r\n  return (\r\n    <div className=\"message-container\">\r\n      <span className={classMessage}>\r\n        {item.user}: {item.text}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message","const Send = ({ value, onChange, onSend }) => {\r\n  return (\r\n    <form className=\"input-group mb-3\" onSubmit={onSend}>\r\n      <input className=\"form-control\" value={value} onChange={onChange} />\r\n      <button className=\"btn btn-primary\" type=\"submit\">\r\n        Отправить\r\n      </button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Send","import {io} from 'socket.io-client';\r\nconst URL = 'localhost:5000';\r\n\r\nexport const socket = io(URL);\r\n \r\n","import React,{useEffect, useState} from 'react';\r\nimport Message from '../message/message';\r\nimport Send from '../send/send';\r\nimport './chat.css';\r\nimport { socket } from './socket';\r\n\r\nfunction Chat() {\r\n\r\n  const [currentUser, setCurrentUser] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n  const [isLogin, setIsLogin] = useState(false);\r\n  const [users, setUsers] = useState({});\r\n\r\n    useEffect(() => {\r\n      socket.on('message', (data) => {\r\n        let maxlengthMsgList = ([...messages, { user: data.user2, text: data.text2 }]);\r\n\r\n        if (maxlengthMsgList.length > 10) {\r\n            messages.shift();\r\n        };\r\n\r\n        return setMessages([...messages, { user: data.user2, text: data.text2 }]);\r\n\r\n    });\r\n    socket.on('users', (data) => setUsers(data))\r\n    }, [messages]);\r\n  \r\n  const changeName = (event) => {\r\n    setCurrentUser(event.target.value)\r\n  };\r\n\r\n   const changeMessage = (event) => {\r\n    setMessage(event.target.value)\r\n  };\r\n  \r\n  const inputName = () => {\r\n    if (currentUser.trim().length > 0) {\r\n      socket.emit('change:name', currentUser);\r\n      setIsLogin(true)\r\n    }\r\n  };\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n      if (message.trim().length > 0) {\r\n      socket.emit('message', { user2: currentUser, text2: message.trim() }); // Тут формуємо об'єкт, який передамо в socket.on('message', (data)\r\n      setMessage('')\r\n    }\r\n\r\n  }  \r\n \r\n  return (\r\n    <>\r\n{!isLogin && <main className=\"form-signin\">\r\n  <h4 className=\"form-floating mb-3\">Please, introduce yourself</h4>\r\n  <div className=\"form-floating mb-3\">\r\n    <label>\r\n    <input\r\n      className=\"form-control\"\r\n        value={currentUser}\r\n      onChange={changeName}\r\n      placeholder=\"Enter your nicname\"\r\n      id=\"floatingInput\"\r\n  /></label>\r\n    </div>\r\n    <button\r\n    className=\"w-100 btn btn-lg btn-primary\"\r\n    onClick={inputName}\r\n    >Enter\r\n   </button>\r\n  </main>\r\n      }\r\n      {isLogin &&\r\n          <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n          <div className=\"message-list col-md-9\">\r\n          <Send\r\n                value={message}\r\n                onChange={changeMessage}\r\n                onSend={sendMessage}\r\n              />\r\n          <div className=\"messages\">\r\n                {messages.map((item, key) => (\r\n                  <Message item={item} currentUser={currentUser} key={key} />\r\n                ))}\r\n              </div>\r\n        </div>\r\n          <ul className=\"list-group col-md-3\">\r\n            {Object.values(users).map((user, i) => (\r\n                <li className=\"list-group-item\" key={i}>\r\n                  {user}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n      </div>\r\n    </div>\r\n      }\r\n    </>\r\n  )};\r\n\r\nexport default Chat;\r\n\r\n","import './App.css';\nimport Chat from '../src/components/chat/chat';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chat />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}